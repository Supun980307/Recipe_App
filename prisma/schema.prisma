generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  cat_id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  category_name String
  recipes       recipes[]
}

model comments {
  comment_id String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  recipe_id  String?  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  comment    String
  created_at DateTime @db.Timestamp(6)
  recipes    recipes? @relation(fields: [recipe_id], references: [recipe_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_comments_recipes")
  users      users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_comments_users")
}

model ratings {
  rating_id  String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  recipe_id  String?  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
  recipes    recipes? @relation(fields: [recipe_id], references: [recipe_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ratings_recipes")
  users      users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ratings_users")
}

model recipes {
  recipe_id         String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title             String
  image_url         String?
  user_id           String?     @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description       String?
  ingredients       String?
  directions        String?
  cat_id            String?     @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at        DateTime    @db.Timestamp(6)
  comments          comments[]
  ratings           ratings[]
  recipe_categories categories? @relation(fields: [cat_id], references: [cat_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_recipes_recipecategory")
  users             users?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_recipes_users")
}

model users {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name  String
  last_name   String
  email       String
  password    String
  profile_url String?
  comments    comments[]
  ratings     ratings[]
  recipes     recipes[]
}
